{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHA","SORT_BY_LENGTH","App","useState","sortField","setSortField","reversed","setReversed","visibleGoods","goods","prepearedGoods","sort","a","b","localeCompare","length","reverse","getPrepearedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAgB,QAChBC,EAAiB,SAyBhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA1BR,SAA2BC,EAA3B,GAA4D,IAAxBL,EAAuB,EAAvBA,UAAWE,EAAY,EAAZA,SACzCI,EAAc,YAAOD,GAmBzB,OAjBIL,GACFM,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAEE,cAAcD,GACzB,KAAKZ,EACH,OAAOW,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKXT,IACFI,EAAiBA,EAAeM,WAG3BN,EAMcO,CAAkBlB,EACrC,CAAEK,YAAWE,aAEf,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYjB,IAAcJ,IAJhC,iCASA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYjB,IAAcH,IAJhC,4BASA,wBACEkB,QAAS,kBAAMZ,GAAaD,IAC5Bc,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CAAE,YAAaf,IAHpD,sBAQEF,GAAaE,IACb,wBACEa,QAAS,WACPd,EAAa,IACbE,GAAY,IAEda,KAAK,SACLF,UAAU,4BANZ,sBAcJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC7FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.464886cd.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHA = 'aplha';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPrepearedGoods(goods, { sortField, reversed }) {\n  let prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((a, b) => {\n      switch (sortField) {\n        case SORT_BY_ALPHA:\n          return a.localeCompare(b);\n        case SORT_BY_LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    prepearedGoods = prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const visibleGoods = getPrepearedGoods(goodsFromServer,\n    { sortField, reversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_ALPHA)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_BY_ALPHA })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReversed(!reversed)}\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}